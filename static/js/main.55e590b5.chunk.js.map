{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","navigator","clipboard","writeText","split","join","charAt","slice","arr","i","length","defaultProps","aboutText","Alert","alert","role","word","lower","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.55e590b5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/*<form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form>*/}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n            </div>\r\n          </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired}\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n};","import React, {useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        //console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to uppercase!\", \"success\");  \r\n    }\r\n    const handleLoClick = ()=>{\r\n        //console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to lowercase!\", \"success\");\r\n    }\r\n    const handleClearClick = ()=>{\r\n        //console.log(\"Uppercase was clicked: \" + text);\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"text cleared!\", \"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        //console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () =>{\r\n        console.log(\"I am copy\");\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n    const handleSentenceCase =()=>{\r\n        let newText = text.charAt(0).toUpperCase() + text.slice(1);\r\n                setText(newText);\r\n                props.showAlert(\"changed to Sentence case!\", \"success\");\r\n    }\r\n    const titleCase = ()=>{\r\n        const arr = text.split(\" \");\r\n        for(var i=0;i<arr.length;i++){\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n        }\r\n        const newText = arr.join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"changed to Title case!\", \"success\");\r\n    }\r\n\r\n\r\n    const [text , setText]= useState('');\r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h1 >{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra spaces</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleSentenceCase}>Sentence case</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={titleCase}>Title case</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        //eslint-disable-next-line\r\n       props.alert && <div className={'alert alert-${props.alert.type} alert-dismissible fade show'} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message , type) =>{\n        setAlert({\n          msg: message,\n          type: type\n        })\n        setTimeout(() => {\n          setAlert(null);\n        }, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\" , \"success\");\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\" , \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n  <>\n{/*<Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" />*/} \n{/*<Navbar/>*/}\n{/* <Router> */}\n<Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n{/* <Switch> */}\n         {/* <Route exact path=\"/about\">\n            <About />\n          </Route>*/}\n          {/* <Route exact path=\"/\">  */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route> */}\n{/* </Switch> */}\n</div>\n{/* </Router> */}\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}